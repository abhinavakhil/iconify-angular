{"ast":null,"code":"import { normalize, SVG } from './svg';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"./icon.service\";\nexport class IconDirective {\n  constructor(domSanitizer, iconService) {\n    this.domSanitizer = domSanitizer;\n    this.iconService = iconService;\n    this.width = '1em';\n    this.height = '1em';\n    this.rotate = 0;\n  }\n  ngOnInit() {}\n  ngOnChanges(changes) {\n    if (changes) {\n      this.updateIcon();\n    }\n  }\n  updateIcon() {\n    const icon = this.getIcon();\n    const svg = new SVG(normalize(icon));\n    this.iconHTML = this.generateSvgHtml(svg);\n  }\n  getIcon() {\n    const iconInput = this.icon || this.icIcon;\n    if (typeof iconInput !== 'object' && typeof iconInput !== 'string') {\n      throw new Error('[Iconify]: No icon provided');\n    }\n    return typeof iconInput === 'object' ? iconInput : this.iconService.get(iconInput);\n  }\n  generateSvgHtml(svg) {\n    return this.domSanitizer.bypassSecurityTrustHtml(svg.getSVG({\n      width: this.size || this.width,\n      height: this.size || this.height,\n      color: this.color,\n      inline: this.inline,\n      box: this.box,\n      align: this.align,\n      hFlip: this.hFlip,\n      vFlip: this.vFlip,\n      flip: this.flip,\n      rotate: this.rotate\n    }));\n  }\n  static #_ = this.ɵfac = function IconDirective_Factory(t) {\n    return new (t || IconDirective)(i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(i2.IconService));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: IconDirective,\n    selectors: [[\"ic-icon\"], [\"\", \"icIcon\", \"\"]],\n    hostVars: 3,\n    hostBindings: function IconDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"innerHTML\", ctx.iconHTML, i0.ɵɵsanitizeHtml);\n        i0.ɵɵclassProp(\"ic-inline\", ctx.inline);\n      }\n    },\n    inputs: {\n      icIcon: \"icIcon\",\n      icon: \"icon\",\n      color: \"color\",\n      inline: \"inline\",\n      box: \"box\",\n      size: \"size\",\n      width: \"width\",\n      height: \"height\",\n      align: \"align\",\n      hFlip: \"hFlip\",\n      vFlip: \"vFlip\",\n      flip: \"flip\",\n      rotate: \"rotate\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}","map":{"version":3,"names":["normalize","SVG","IconDirective","constructor","domSanitizer","iconService","width","height","rotate","ngOnInit","ngOnChanges","changes","updateIcon","icon","getIcon","svg","iconHTML","generateSvgHtml","iconInput","icIcon","Error","get","bypassSecurityTrustHtml","getSVG","size","color","inline","box","align","hFlip","vFlip","flip","_","i0","ɵɵdirectiveInject","i1","DomSanitizer","i2","IconService","_2","selectors","hostVars","hostBindings","IconDirective_HostBindings","rf","ctx"],"sources":["C:\\Users\\abhin\\Downloads\\Downloaded\\Content Creation\\iconify-angular-master\\iconify-angular-master\\projects\\iconify\\src\\lib\\icon.directive.ts"],"sourcesContent":["import { IconService } from './icon.service';\nimport { Directive, HostBinding, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { normalize, SVG } from './svg';\n\n@Directive({\n  selector: 'ic-icon,[icIcon]'\n})\nexport class IconDirective implements OnInit, OnChanges {\n\n  @Input() icIcon: object | string;\n  @Input() icon: object | string;\n\n  // Optional Properties\n  @Input() color: string;\n\n  @Input()\n  @HostBinding('class.ic-inline')\n  inline: boolean;\n\n  @Input() box: boolean;\n\n  // Dimensions and Alignment\n  @Input() size: string;\n  @Input() width = '1em';\n  @Input() height = '1em';\n  @Input() align: string;\n\n  // Transformations\n  @Input() hFlip: boolean;\n  @Input() vFlip: boolean;\n  @Input() flip: string;\n  @Input() rotate = 0;\n\n  @HostBinding('innerHTML')\n  iconHTML: SafeHtml;\n\n  constructor(private domSanitizer: DomSanitizer, private iconService: IconService) { }\n\n  ngOnInit() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      this.updateIcon();\n    }\n  }\n\n  updateIcon() {\n    const icon = this.getIcon();\n    const svg = new SVG(normalize(icon));\n    this.iconHTML = this.generateSvgHtml(svg);\n  }\n\n  private getIcon(): object {\n    const iconInput = this.icon || this.icIcon;\n    if (typeof iconInput !== 'object' && typeof iconInput !== 'string') {\n      throw new Error('[Iconify]: No icon provided');\n    }\n    return typeof iconInput === 'object' ? iconInput : this.iconService.get(iconInput);\n  }\n\n  private generateSvgHtml(svg: SVG): SafeHtml{\n    return this.domSanitizer.bypassSecurityTrustHtml(svg.getSVG({\n      width: this.size || this.width,\n      height: this.size || this.height,\n      color: this.color,\n      inline: this.inline,\n      box: this.box,\n      align: this.align,\n      hFlip: this.hFlip,\n      vFlip: this.vFlip,\n      flip: this.flip,\n      rotate: this.rotate\n    }));\n  }\n}\n"],"mappings":"AAGA,SAASA,SAAS,EAAEC,GAAG,QAAQ,OAAO;;;;AAKtC,OAAM,MAAOC,aAAa;EA6BxBC,YAAoBC,YAA0B,EAAUC,WAAwB;IAA5D,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IAb1D,KAAAC,KAAK,GAAG,KAAK;IACb,KAAAC,MAAM,GAAG,KAAK;IAOd,KAAAC,MAAM,GAAG,CAAC;EAKiE;EAEpFC,QAAQA,CAAA,GAAK;EAEbC,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,EAAE;MACX,IAAI,CAACC,UAAU,EAAE;;EAErB;EAEAA,UAAUA,CAAA;IACR,MAAMC,IAAI,GAAG,IAAI,CAACC,OAAO,EAAE;IAC3B,MAAMC,GAAG,GAAG,IAAId,GAAG,CAACD,SAAS,CAACa,IAAI,CAAC,CAAC;IACpC,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACC,eAAe,CAACF,GAAG,CAAC;EAC3C;EAEQD,OAAOA,CAAA;IACb,MAAMI,SAAS,GAAG,IAAI,CAACL,IAAI,IAAI,IAAI,CAACM,MAAM;IAC1C,IAAI,OAAOD,SAAS,KAAK,QAAQ,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;MAClE,MAAM,IAAIE,KAAK,CAAC,6BAA6B,CAAC;;IAEhD,OAAO,OAAOF,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAG,IAAI,CAACb,WAAW,CAACgB,GAAG,CAACH,SAAS,CAAC;EACpF;EAEQD,eAAeA,CAACF,GAAQ;IAC9B,OAAO,IAAI,CAACX,YAAY,CAACkB,uBAAuB,CAACP,GAAG,CAACQ,MAAM,CAAC;MAC1DjB,KAAK,EAAE,IAAI,CAACkB,IAAI,IAAI,IAAI,CAAClB,KAAK;MAC9BC,MAAM,EAAE,IAAI,CAACiB,IAAI,IAAI,IAAI,CAACjB,MAAM;MAChCkB,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,GAAG,EAAE,IAAI,CAACA,GAAG;MACbC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfvB,MAAM,EAAE,IAAI,CAACA;KACd,CAAC,CAAC;EACL;EAAC,QAAAwB,CAAA,G;qBAlEU9B,aAAa,EAAA+B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbrC,aAAa;IAAAsC,SAAA;IAAAC,QAAA;IAAAC,YAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}